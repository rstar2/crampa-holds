<div class="container" id="app-shop-cart">
	<div class="row">
		<div class="col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">

			<article>
				<p>
					<a href="{{shopUrl}}">&larr; back to Shop</a>
				</p>
				<hr> {{#if session.cart}}

				<header>
					<h1>Shopping cart</h1>
					<h3>Total products : {{session.cart.totalQty}}</h3>
					<h3>Total Price : {{session.cart.totalPrice}}</h3>
				</header>

				<hr>

				<ul class="list-group cart">
					{{# each session.cart.items}}
					<li class="list-group-item product">
						<strong>
							<a href="{{productUrl product.slug}}">{{{product.title}}}</a>
						</strong>

						<b-dropdown text="Action">
							<b-dropdown-item href="{{cartRemoveUrl @key}}">Remove 1</b-dropdown-item>
							<b-dropdown-item href="{{cartRemoveUrl @key qty='all'}}">Remove All</b-dropdown-item>
						</b-dropdown>

						<b-badge pill variant="primary">Quantity: {{qty}}</b-badge>
						<b-badge pill variant="primary" class="float-right">${{ totalPrice product.price qty }}</b-badge>
					</li>
					{{/each}}
				</ul>

				{{!-- <b-button href="{{shopUrl 'checkout'}}" variant="success" class="my-2">Checkout</b-button> --}}
				
				{{#if PayPal_clientId}}
				<div id="paypal-button-container" class="mt-3"></div>
				{{/if}}


				{{else}}
				<header>
					<h1>Empty Shopping cart</h1>
				</header>
				{{/if}}
			</article>

		</div>
	</div>
</div>

{{#section 'head_js'}}
<script src="https://www.paypalobjects.com/api/checkout.js"></script>
{{/section}}

{{#section 'body_js'}}
<script src="/public/js/build.shop-cart.js?v={{version}}"></script>

{{#if PayPal_clientId}}
<script>
	paypal.Button.render({


		env: '{{ PayPal_env }}', // sandbox | live

		// PayPal Client IDs - replace with your own
		// Create a PayPal app: https://developer.paypal.com/developer/applications/create
		client: {
			{{ PayPal_env }}: '{{ PayPal_clientId }}',
		},

		// Show the buyer a 'Pay Now' button in the checkout flow
		commit: true,

		// payment() is called when the button is clicked
		payment: function (data, actions) {

			// Make a call to the REST api to create the payment
			return actions.payment.create({
				payment: {
					transactions: [
						{
							amount: { total: '0.05', currency: 'EU' },
							description: "This is the payment description"
						}
					]
				}
			});
		},

		// onAuthorize() is called when the buyer approves the payment
		onAuthorize: function (data, actions) {

			// Make a call to the REST api to execute the payment
			return actions.payment.execute().then(function () {
				
				window.alert('Payment Complete!');
			});
		}

	}, '#paypal-button-container');

</script>
{{/if}}

{{/section}}
