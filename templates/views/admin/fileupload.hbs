<div id="app">
	<upload-item></upload-item>
	<upload-list v-bind:items="items"></upload-list>
</div>


{{#section 'body_js'}}
<script type="text/javascript">

	Vue.component('upload-item', {
		template: `<div>
		<h1>Upload a new file</h1>
		<form>
			<div>
				<input type="file" v-on:change.prevent="$event.target.files.length ? file = $event.target.files[0] : null" />
				<br>
				<label for="file_name">Give the file a name:</label>
				<input type="text" name="file_name" v-model.trim="name" />
			</div>
			<br>
			<div>
				<button type="button" v-on:click.prevent="onUpload" v-bind:disabled="!file">Upload</button>
			</div>
		</form>
		<hr>
		</div>`,
		data() {
			return {
				name: "Example name",
				file: null
			}
		},
		methods: {
			onUpload() {
				var data = new FormData();
				// This is the raw file that was selected
				data.append('file', this.file);
				// This is the name of the FileUpload
				data.append('name', this.name);

				fetch('/api/fileupload/create', {
					method: 'POST',
					body: data,
					credentials: 'same-origin',
					cache: 'no-cache',
				})
					.then(r => {
						if (!r.ok) return Promise.reject('failed');
						return r.json();
					})
					.then(data => {
						var item = data.item;

						// TODO: add to list
						//this.addToList(item);
					})
					.catch(err => {
						alert('Failed to add new file-upload - ' + error);
					});
			}
		}
	});

	Vue.component('upload-list-item', {
  		props: ['item'],
  		template: `<li>
				<a v-bind:href="item.file.url" download>\{{ item.name }}</a>
			     - <a href="" v-on:click.prevent="onRemove(item.id)">Delete</a>
			</li>`,
		methods: {
			onRemove(id) {
				fetch(`/api/fileupload/${id}/remove`, {
					credentials: 'same-origin',
					cache: 'no-cache',
				})
					.then(r => {
						if (!r.ok) return Promise.reject('failed');
						return r.json();
					})
					.then(data => {
						var success = !!data.success;
						if (!success) {
							return Promise.reject('failed');
						}
						
						// TODO: remove from list
						// this.removeFromList(item)
					})
					.catch(function (error) {
						alert('Failed to remove file-upload - ' + error);
					});
			}
		}
	});

	Vue.component('upload-list', {
		template:`<div>
		<h2>Uploaded File List:</h2>
		<ul>
			<upload-list-item v-for="item of items" v-bind:item="item"></upload-list-item>
		</ul>
		</div>`,
		data() {
			return {
				items: []
			}
		},
		methods: {
			addToList(item) {
				this.items.push(item);
				
				// TODO: immutable ?
				//this.items = [...this.items, item];
			},
			removeFromList(item) {
				// TODO:
			}
		},
		mounted() {
			// load all current file-uploads
			fetch('/api/fileupload/list', {
				credentials: 'same-origin',
				cache: 'no-cache',
			})
				.then(r => {
					if (!r.ok) return Promise.reject('failed');
					return r.json();
				})
				.then(data => {
					var items = data.items;
					items.forEach(item => this.addToList(item));
				})
				.catch(function (error) {
					alert('Failed to list file-uploads - ' + error);
				});
		}
	});

	// https://vuejs.org/v2/guide/ 
	// https://www.smashingmagazine.com/2018/02/jquery-vue-javascript/ 
	new Vue({
		el: '#app',
	});

</script>
{{/section}}
